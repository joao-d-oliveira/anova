// This file is auto-generated by @hey-api/openapi-ts

export type BodyUploadFilesApiUploadUploadPost = {
    team_files: Blob | File;
    opponent_files: Blob | File;
    team_name?: string | null;
    opponent_name?: string | null;
    use_local_simulation?: boolean | null;
};

export type GameSimulation = {
    id: number | null;
    game_id: number;
    win_probability: string | null;
    projected_score: string | null;
    sim_overall_summary: string | null;
    sim_success_factors: string | null;
    sim_key_matchups: string | null;
    sim_win_loss_patterns: string | null;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type MessageResponse = {
    detail: string;
};

export type OverallReport = {
    created_at: string;
    game_uuid: string;
    game_simulation: GameSimulation;
    team: Team;
    team_stats: TeamStats;
    team_player_analysis: Array<ProjectedPlayer>;
    opponent: Team;
    opponent_stats: TeamStats;
    opponent_player_analysis: Array<ProjectedPlayer>;
};

export type ProcessingTask = {
    task_id: string;
    status: 'processing' | 'completed' | 'failed';
    files: Array<string>;
    timestamp: string;
    team_name: string;
    opponent_name: string;
    step_description: string;
    current_step: number;
    total_steps: number;
    game_report_path?: string | null;
    game_report_uuid?: string | null;
    game_uuid?: string | null;
};

export type ProjectedPlayer = {
    id: number;
    player_id: number;
    team_id: number;
    game_id: number;
    is_home_team: boolean;
    ppg: number;
    rpg: number;
    apg: number;
    fg_pct: string;
    fg3_pct: string;
    role: string;
    actual_ppg: number | null;
    actual_rpg: number | null;
    actual_apg: number | null;
    actual_fg_pct: string | null;
    actual_fg3_pct: string | null;
    actual_ft_pct: string | null;
    actual_spg: number | null;
    actual_bpg: number | null;
    actual_topg: number | null;
    actual_minutes: number | null;
    created_at: string | null;
    updated_at: string | null;
};

export type Team = {
    id: number;
    name: string;
    record: string | null;
    ranking: string | null;
    playing_style: string | null;
};

export type TeamStats = {
    ppg: number | null;
    fg_pct: string | null;
    fg_made: number | null;
    fg_attempted: number | null;
    fg3_pct: string | null;
    fg3_made: number | null;
    fg3_attempted: number | null;
    ft_pct: string | null;
    ft_made: number | null;
    ft_attempted: number | null;
    rebounds: number | null;
    offensive_rebounds: number | null;
    defensive_rebounds: number | null;
    assists: number | null;
    steals: number | null;
    blocks: number | null;
    turnovers: number | null;
    assist_to_turnover: number | null;
    is_season_average: boolean | null;
};

export type TokenResponse = {
    access_token: string;
    token_type?: string;
    expires_at: string;
};

export type UploadProcessResponse = {
    task_id: string;
    status: 'processing' | 'completed' | 'failed';
};

export type UserBase = {
    email: string;
    name: string;
    phone_number: string;
    school: string;
    role: string;
};

export type UserConfirm = {
    email: string;
    code: string;
};

export type UserCreate = {
    email: string;
    name: string;
    phone_number: string;
    school: string;
    role: string;
    password: string;
    confirm_password: string;
};

export type UserLogin = {
    email: string;
    password: string;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type GetAnalysesApiUploadAnalysesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/upload/analyses';
};

export type GetAnalysesApiUploadAnalysesGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAnalysesApiUploadAnalysesGetError = GetAnalysesApiUploadAnalysesGetErrors[keyof GetAnalysesApiUploadAnalysesGetErrors];

export type GetAnalysesApiUploadAnalysesGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UploadFilesApiUploadUploadPostData = {
    body: BodyUploadFilesApiUploadUploadPost;
    path?: never;
    query?: never;
    url: '/api/upload/upload';
};

export type UploadFilesApiUploadUploadPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadFilesApiUploadUploadPostError = UploadFilesApiUploadUploadPostErrors[keyof UploadFilesApiUploadUploadPostErrors];

export type UploadFilesApiUploadUploadPostResponses = {
    /**
     * Successful Response
     */
    200: UploadProcessResponse;
};

export type UploadFilesApiUploadUploadPostResponse = UploadFilesApiUploadUploadPostResponses[keyof UploadFilesApiUploadUploadPostResponses];

export type GetStatusApiUploadStatusTaskIdGetData = {
    body?: never;
    path: {
        task_id: string;
    };
    query?: never;
    url: '/api/upload/status/{task_id}';
};

export type GetStatusApiUploadStatusTaskIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetStatusApiUploadStatusTaskIdGetError = GetStatusApiUploadStatusTaskIdGetErrors[keyof GetStatusApiUploadStatusTaskIdGetErrors];

export type GetStatusApiUploadStatusTaskIdGetResponses = {
    /**
     * Successful Response
     */
    200: ProcessingTask;
};

export type GetStatusApiUploadStatusTaskIdGetResponse = GetStatusApiUploadStatusTaskIdGetResponses[keyof GetStatusApiUploadStatusTaskIdGetResponses];

export type DownloadReportApiUploadDownloadTaskIdGetData = {
    body?: never;
    path: {
        task_id: string;
    };
    query?: never;
    url: '/api/upload/download/{task_id}';
};

export type DownloadReportApiUploadDownloadTaskIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DownloadReportApiUploadDownloadTaskIdGetError = DownloadReportApiUploadDownloadTaskIdGetErrors[keyof DownloadReportApiUploadDownloadTaskIdGetErrors];

export type DownloadReportApiUploadDownloadTaskIdGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DownloadTeamAnalysisApiUploadDownloadTeamAnalysisTaskIdGetData = {
    body?: never;
    path: {
        task_id: string;
    };
    query?: never;
    url: '/api/upload/download-team-analysis/{task_id}';
};

export type DownloadTeamAnalysisApiUploadDownloadTeamAnalysisTaskIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DownloadTeamAnalysisApiUploadDownloadTeamAnalysisTaskIdGetError = DownloadTeamAnalysisApiUploadDownloadTeamAnalysisTaskIdGetErrors[keyof DownloadTeamAnalysisApiUploadDownloadTeamAnalysisTaskIdGetErrors];

export type DownloadTeamAnalysisApiUploadDownloadTeamAnalysisTaskIdGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DownloadOpponentAnalysisApiUploadDownloadOpponentAnalysisTaskIdGetData = {
    body?: never;
    path: {
        task_id: string;
    };
    query?: never;
    url: '/api/upload/download-opponent-analysis/{task_id}';
};

export type DownloadOpponentAnalysisApiUploadDownloadOpponentAnalysisTaskIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DownloadOpponentAnalysisApiUploadDownloadOpponentAnalysisTaskIdGetError = DownloadOpponentAnalysisApiUploadDownloadOpponentAnalysisTaskIdGetErrors[keyof DownloadOpponentAnalysisApiUploadDownloadOpponentAnalysisTaskIdGetErrors];

export type DownloadOpponentAnalysisApiUploadDownloadOpponentAnalysisTaskIdGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DownloadByPathApiUploadDownloadByPathGetData = {
    body?: never;
    path?: never;
    query: {
        path: string;
    };
    url: '/api/upload/download-by-path';
};

export type DownloadByPathApiUploadDownloadByPathGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DownloadByPathApiUploadDownloadByPathGetError = DownloadByPathApiUploadDownloadByPathGetErrors[keyof DownloadByPathApiUploadDownloadByPathGetErrors];

export type DownloadByPathApiUploadDownloadByPathGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoginUserApiAuthLoginPostData = {
    body: UserLogin;
    path?: never;
    query?: never;
    url: '/api/auth/login';
};

export type LoginUserApiAuthLoginPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginUserApiAuthLoginPostError = LoginUserApiAuthLoginPostErrors[keyof LoginUserApiAuthLoginPostErrors];

export type LoginUserApiAuthLoginPostResponses = {
    /**
     * Successful Response
     */
    200: TokenResponse;
};

export type LoginUserApiAuthLoginPostResponse = LoginUserApiAuthLoginPostResponses[keyof LoginUserApiAuthLoginPostResponses];

export type ConfirmEmailApiAuthConfirmEmailPostData = {
    body: UserConfirm;
    path?: never;
    query?: never;
    url: '/api/auth/confirm-email';
};

export type ConfirmEmailApiAuthConfirmEmailPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ConfirmEmailApiAuthConfirmEmailPostError = ConfirmEmailApiAuthConfirmEmailPostErrors[keyof ConfirmEmailApiAuthConfirmEmailPostErrors];

export type ConfirmEmailApiAuthConfirmEmailPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LogoutUserApiAuthLogoutPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/auth/logout';
};

export type LogoutUserApiAuthLogoutPostErrors = {
    /**
     * Not found
     */
    404: unknown;
};

export type LogoutUserApiAuthLogoutPostResponses = {
    /**
     * Successful Response
     */
    200: MessageResponse;
};

export type LogoutUserApiAuthLogoutPostResponse = LogoutUserApiAuthLogoutPostResponses[keyof LogoutUserApiAuthLogoutPostResponses];

export type RegisterUserApiAuthRegisterPostData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/api/auth/register';
};

export type RegisterUserApiAuthRegisterPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterUserApiAuthRegisterPostError = RegisterUserApiAuthRegisterPostErrors[keyof RegisterUserApiAuthRegisterPostErrors];

export type RegisterUserApiAuthRegisterPostResponses = {
    /**
     * Successful Response
     */
    200: MessageResponse;
};

export type RegisterUserApiAuthRegisterPostResponse = RegisterUserApiAuthRegisterPostResponses[keyof RegisterUserApiAuthRegisterPostResponses];

export type ForgotPasswordApiAuthForgotPasswordPostData = {
    body?: never;
    path?: never;
    query: {
        email: string;
    };
    url: '/api/auth/forgot-password';
};

export type ForgotPasswordApiAuthForgotPasswordPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ForgotPasswordApiAuthForgotPasswordPostError = ForgotPasswordApiAuthForgotPasswordPostErrors[keyof ForgotPasswordApiAuthForgotPasswordPostErrors];

export type ForgotPasswordApiAuthForgotPasswordPostResponses = {
    /**
     * Successful Response
     */
    200: MessageResponse;
};

export type ForgotPasswordApiAuthForgotPasswordPostResponse = ForgotPasswordApiAuthForgotPasswordPostResponses[keyof ForgotPasswordApiAuthForgotPasswordPostResponses];

export type ResetPasswordApiAuthResetPasswordPostData = {
    body?: never;
    path?: never;
    query: {
        email: string;
        token: string;
        new_password: string;
        confirm_password: string;
    };
    url: '/api/auth/reset-password';
};

export type ResetPasswordApiAuthResetPasswordPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ResetPasswordApiAuthResetPasswordPostError = ResetPasswordApiAuthResetPasswordPostErrors[keyof ResetPasswordApiAuthResetPasswordPostErrors];

export type ResetPasswordApiAuthResetPasswordPostResponses = {
    /**
     * Successful Response
     */
    200: MessageResponse;
};

export type ResetPasswordApiAuthResetPasswordPostResponse = ResetPasswordApiAuthResetPasswordPostResponses[keyof ResetPasswordApiAuthResetPasswordPostResponses];

export type GetMeApiAuthMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/auth/me';
};

export type GetMeApiAuthMeGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMeApiAuthMeGetError = GetMeApiAuthMeGetErrors[keyof GetMeApiAuthMeGetErrors];

export type GetMeApiAuthMeGetResponses = {
    /**
     * Successful Response
     */
    200: UserBase;
};

export type GetMeApiAuthMeGetResponse = GetMeApiAuthMeGetResponses[keyof GetMeApiAuthMeGetResponses];

export type GetFullGameReportApiReportGameUuidGetData = {
    body?: never;
    path: {
        game_uuid: string;
    };
    query?: never;
    url: '/api/report/{game_uuid}';
};

export type GetFullGameReportApiReportGameUuidGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetFullGameReportApiReportGameUuidGetError = GetFullGameReportApiReportGameUuidGetErrors[keyof GetFullGameReportApiReportGameUuidGetErrors];

export type GetFullGameReportApiReportGameUuidGetResponses = {
    /**
     * Successful Response
     */
    200: OverallReport;
};

export type GetFullGameReportApiReportGameUuidGetResponse = GetFullGameReportApiReportGameUuidGetResponses[keyof GetFullGameReportApiReportGameUuidGetResponses];

export type MaintenancePageMaintenanceGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/maintenance';
};

export type MaintenancePageMaintenanceGetResponses = {
    /**
     * Successful Response
     */
    200: string;
};

export type MaintenancePageMaintenanceGetResponse = MaintenancePageMaintenanceGetResponses[keyof MaintenancePageMaintenanceGetResponses];

export type AnalysesPageAnalysesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/analyses';
};

export type AnalysesPageAnalysesGetResponses = {
    /**
     * Successful Response
     */
    200: string;
};

export type AnalysesPageAnalysesGetResponse = AnalysesPageAnalysesGetResponses[keyof AnalysesPageAnalysesGetResponses];

export type ReportViewReportReportIdGetData = {
    body?: never;
    path: {
        report_id: string;
    };
    query?: never;
    url: '/report/{report_id}';
};

export type ReportViewReportReportIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReportViewReportReportIdGetError = ReportViewReportReportIdGetErrors[keyof ReportViewReportReportIdGetErrors];

export type ReportViewReportReportIdGetResponses = {
    /**
     * Successful Response
     */
    200: string;
};

export type ReportViewReportReportIdGetResponse = ReportViewReportReportIdGetResponses[keyof ReportViewReportReportIdGetResponses];

export type ReadRootPathGetData = {
    body?: never;
    path: {
        path: string;
    };
    query?: never;
    url: '/{path}';
};

export type ReadRootPathGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadRootPathGetError = ReadRootPathGetErrors[keyof ReadRootPathGetErrors];

export type ReadRootPathGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};