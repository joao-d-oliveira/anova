"""Add ProcessingTask

Revision ID: ae5d6c99dd4d
Revises: 7376c13cba74
Create Date: 2025-05-23 11:23:38.827349

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from app.database.models import UTCDateTime


# revision identifiers, used by Alembic.
revision: str = 'ae5d6c99dd4d'
down_revision: Union[str, None] = '7376c13cba74'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('processing_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_uuid', sa.UUID(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('team_file_path', sa.String(length=255), nullable=True),
    sa.Column('opponent_file_path', sa.String(length=255), nullable=False),
    sa.Column('step', sa.Integer(), nullable=False),
    sa.Column('total_steps', sa.Integer(), nullable=False),
    sa.Column('created_at', UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('task_uuid')
    )
    op.add_column('teams', sa.Column('uuid', sa.UUID(), nullable=True))
    op.create_unique_constraint(None, 'teams', ['uuid'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'teams', type_='unique')
    op.drop_column('teams', 'uuid')
    op.drop_table('processing_tasks')
    # ### end Alembic commands ###
