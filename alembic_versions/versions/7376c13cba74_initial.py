"""Initial

Revision ID: 7376c13cba74
Revises: 
Create Date: 2025-05-23 09:57:54.916830

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects.postgresql import JSONB
import app

# revision identifiers, used by Alembic.
revision: str = '7376c13cba74'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('record', sa.String(length=20), nullable=True),
    sa.Column('ranking', sa.String(length=50), nullable=True),
    sa.Column('record_date', sa.Date(), nullable=True),
    sa.Column('created_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('school', sa.String(length=100), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('created_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coaches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('created_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('home_team_id', sa.Integer(), nullable=True),
    sa.Column('away_team_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('home_score', sa.Integer(), nullable=True),
    sa.Column('away_score', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.ForeignKeyConstraint(['away_team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['home_team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('one_time_passwords',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('otp', sa.String(length=10), nullable=False),
    sa.Column('created_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('otp')
    )
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('number', sa.String(length=10), nullable=True),
    sa.Column('position', sa.String(length=20), nullable=True),
    sa.Column('height', sa.String(length=10), nullable=True),
    sa.Column('weight', sa.String(length=10), nullable=True),
    sa.Column('year', sa.String(length=20), nullable=True),
    sa.Column('strengths', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('weaknesses', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('created_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team_analysis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('strengths', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('weaknesses', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('key_players', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('offensive_keys', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('defensive_keys', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('game_factors', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('rotation_plan', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('situational_adjustments', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('game_keys', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('playing_style', sa.Text(), nullable=True),
    sa.Column('created_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_simulations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('win_probability', sa.String(length=100), nullable=True),
    sa.Column('projected_score', sa.String(length=100), nullable=True),
    sa.Column('sim_overall_summary', sa.Text(), nullable=True),
    sa.Column('sim_success_factors', sa.Text(), nullable=True),
    sa.Column('sim_key_matchups', sa.Text(), nullable=True),
    sa.Column('sim_win_loss_patterns', sa.Text(), nullable=True),
    sa.Column('sim_critical_advantage', sa.Text(), nullable=True),
    sa.Column('sim_keys_to_victory', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('sim_situational_adjustments', JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('playbook_offensive_plays', JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('playbook_defensive_plays', JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('playbook_special_situations', JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('playbook_inbound_plays', JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('playbook_after_timeout_special_plays', JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_raw_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('fgm', sa.Integer(), nullable=True),
    sa.Column('fga', sa.Integer(), nullable=True),
    sa.Column('fg2m', sa.Integer(), nullable=True),
    sa.Column('fg2a', sa.Integer(), nullable=True),
    sa.Column('fg3m', sa.Integer(), nullable=True),
    sa.Column('fg3a', sa.Integer(), nullable=True),
    sa.Column('ftm', sa.Integer(), nullable=True),
    sa.Column('fta', sa.Integer(), nullable=True),
    sa.Column('total_rebounds', sa.Integer(), nullable=True),
    sa.Column('offensive_rebounds', sa.Integer(), nullable=True),
    sa.Column('defensive_rebounds', sa.Integer(), nullable=True),
    sa.Column('total_assists', sa.Integer(), nullable=True),
    sa.Column('total_steals', sa.Integer(), nullable=True),
    sa.Column('total_blocks', sa.Integer(), nullable=True),
    sa.Column('total_turnovers', sa.Integer(), nullable=True),
    sa.Column('created_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('report_type', sa.String(length=50), nullable=True),
    sa.Column('file_path', sa.String(length=255), nullable=True),
    sa.Column('created_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('team_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('ppg', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('fg_pct', sa.String(length=10), nullable=True),
    sa.Column('fg_made', sa.Numeric(), nullable=True),
    sa.Column('fg_attempted', sa.Numeric(), nullable=True),
    sa.Column('fg3_pct', sa.String(length=10), nullable=True),
    sa.Column('fg3_made', sa.Numeric(), nullable=True),
    sa.Column('fg3_attempted', sa.Numeric(), nullable=True),
    sa.Column('ft_pct', sa.String(length=10), nullable=True),
    sa.Column('ft_made', sa.Numeric(), nullable=True),
    sa.Column('ft_attempted', sa.Numeric(), nullable=True),
    sa.Column('rebounds', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('offensive_rebounds', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('defensive_rebounds', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('assists', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('steals', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('blocks', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('turnovers', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('assist_to_turnover', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('is_season_average', sa.Boolean(), nullable=True),
    sa.Column('created_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_projections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_simulation_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('is_home_team', sa.Boolean(), nullable=True),
    sa.Column('ppg', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('rpg', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('apg', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('fg_pct', sa.String(length=10), nullable=True),
    sa.Column('fg3_pct', sa.String(length=10), nullable=True),
    sa.Column('role', sa.String(length=100), nullable=True),
    sa.Column('created_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['game_simulation_id'], ['game_simulations.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_raw_stats_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('games_played', sa.Integer(), nullable=True),
    sa.Column('ppg', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('fg_pct', sa.String(length=10), nullable=True),
    sa.Column('fg3_pct', sa.String(length=10), nullable=True),
    sa.Column('ft_pct', sa.String(length=10), nullable=True),
    sa.Column('rpg', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('apg', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('spg', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('bpg', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('topg', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('minutes', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('is_season_average', sa.Boolean(), nullable=True),
    sa.Column('created_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['player_raw_stats_id'], ['player_raw_stats.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('simulation_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_simulation_id', sa.Integer(), nullable=True),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('home_team_id', sa.Integer(), nullable=True),
    sa.Column('away_team_id', sa.Integer(), nullable=True),
    sa.Column('num_simulations', sa.Integer(), nullable=True),
    sa.Column('home_team_wins', sa.Integer(), nullable=True),
    sa.Column('away_team_wins', sa.Integer(), nullable=True),
    sa.Column('home_team_win_pct', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('away_team_win_pct', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('avg_home_score', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('avg_away_score', sa.Numeric(precision=5, scale=1), nullable=True),
    sa.Column('closest_game_margin', sa.Integer(), nullable=True),
    sa.Column('blowout_game_margin', sa.Integer(), nullable=True),
    sa.Column('margin_distribution', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('avg_effects', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', app.database.models.UTCDateTime(), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.ForeignKeyConstraint(['away_team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['game_simulation_id'], ['game_simulations.id'], ),
    sa.ForeignKeyConstraint(['home_team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('simulation_details')
    op.drop_table('player_stats')
    op.drop_table('player_projections')
    op.drop_table('team_stats')
    op.drop_table('reports')
    op.drop_table('player_raw_stats')
    op.drop_table('game_simulations')
    op.drop_table('team_analysis')
    op.drop_table('players')
    op.drop_table('one_time_passwords')
    op.drop_table('games')
    op.drop_table('coaches')
    op.drop_table('users')
    op.drop_table('teams')
    # ### end Alembic commands ###
